<%= simple_form_for @purchase, html: {class: 'form-horizontal checkout'}, defaults: { label_html: {class: 'col-md-4 control-label'}, input_html: { class: 'form-control input-m' } } do |form| %>

  <% if @purchase.errors[:card].first %>
    <div class="alert alert-danger" role="alert">
      <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
      <span class="sr-only">Error:</span>
      <%= @purchase.errors[:card].first %>
    </div>
  <% end %>

  <legend>Order Summary</legend>
  <table class="table order-summary">
    <thead>
      <tr>
        <th>Name</th>
        <th>Size</th>
        <th>Price</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><%= @product.name %></td>
        <td><%= params[:size] %></td>
        <td><%= number_to_currency(@product.price_in_dollars) %></td>
      </tr>
      <tr>
        <td></td>
        <td>Voucher Discount</td>
        <td>
          <strong class="js-voucher-discount">
            <%= @purchase.voucher ? number_to_currency(@purchase.voucher.discount_in_dollars) : "$0.00" %>
          </strong>
        </td>
      </tr>
      <tr>
        <td></td>
        <td>Delivery Price</td>
        <td><strong class="js-delivery-price">Free</strong></td>
      </tr>
      <tr>
        <td></td>
        <td>Total Price</td>
        <td><strong class="js-total-price"><%= number_to_currency(@purchase.total_in_dollars) %></strong></td>
      </tr>
    </tbody>
  </table>

  <%= form_auth_field %>
  <%= hidden_field_tag :product_id, @product.id %>
  <%= hidden_field_tag :size, params[:size]  %>
      <legend>About You</legend>
      <%= form.input :name, placeholder: 'Name' %>
      <%= form.input :email_address, placeholder: 'Email Address' %>

      <legend>Delivery Address Details</legend>
      <%= render partial: 'delivery_address', locals: {form: form} %>

      <legend>Voucher</legend>
      <%= form.input :voucher_code, placeholder: 'Voucher Code' %>

      <legend>Card Details</legend>
      <%= render partial: 'credit_card', locals: {form: form} %>

      <div class="buttons col-md-4"></div>
      <div class="buttons col-md-4">
        <button class='form-control btn btn-primary submit-button' type='submit'>Pay <span class="js-total-price"><%= number_to_currency(@purchase.total_in_dollars) %></span> Â»</button>
      </div>
      <div class="buttons col-md-4"></div>
<% end %>

<%= javascript_tag do %>
jQuery(function($) {
  $('#new_purchase').submit(function(event) {
    var $form = $(this);

    // Disable the submit button to prevent repeated clicks
    $form.find('button').prop('disabled', true);

    Stripe.card.createToken($form, stripeResponseHandler);

    // Prevent the form from submitting with the default action
    return false;
  });

  $('#purchase_voucher_code').focusout(function(event){
    $.ajax({
      dataType: "json",
      url: '<%= purchase_price_path(format: :json) %>',
      data: {voucher_code: this.value, country: $('#purchase_country').val(), total_price: <%= @purchase.total %>},
      success: function(result){
        if(result['valid_voucher'] == true){
          $('.js-total-price').html(result['total_price_in_dollars'])
          $('.js-voucher-discount').html(result['voucher_price_in_dollars'])
          $('.js-delivery-price').html(result['delivery_price_in_dollars'])
          bootbox.alert("Notice: Your voucher has been applied.");
        } else {
          bootbox.alert("Notice: The voucher code you have entered is invalid. No discount will be applied.");
        }
      }
    });
  });

  $('#purchase_country').change(function(event){
    var klass = this
    $.ajax({
      dataType: "json",
      url: '<%= purchase_price_path(format: :json) %>',
      data: {country: this.value, total_price: <%= @purchase.total %>, voucher_code: $('#purchase_voucher_code').val()},
      success: function(result){
        $('.js-total-price').html(result['total_price_in_dollars'])
        $('.js-delivery-price').html(result['delivery_price_in_dollars'])
        bootbox.alert("Notice: Delivery price and total price have been updated.");
      }
    });
  });
});

function stripeResponseHandler(status, response) {
  var $form = $('#new_purchase');

  if (response.error) {
    // Show the errors on the form
    $form.find('.payment-errors').text(response.error.message);
    $form.find('.js-stripe-error').show();
    $form.find('button').prop('disabled', false);
  } else {
    // response contains id and card, which contains additional card details
    var token = response.id;
    // Insert the token into the form so it gets submitted to the server
    $form.append($('<input type="hidden" name="purchase[stripe_token]" />').val(token));
    // and submit
    $form.get(0).submit();
  }
};
<% end %>



